// **Logger.js** is a simple and small logging 
// library. It colorizes the output and prepends
// [*]|[+]|[-] depending on what type of message
// it is. 
//
// __It has four types of logging levels that can
// be used and they are:__
// ``debug(msg)``
// ``info(msg)``
// ``warn(msg)``
// ``error(msg)``
//
// __This file is released under the [Modified BSD License][license].__
// [colors]: https://github.com/Marak/colors.js "colors.js"
// [license]: LICENSE

// Require the wonderful colors library
var colors = require('colors');

// Add some keywords so that we can easily
// change the colors later on, if necessary. 
colors.setTheme({
	debug: 'grey',
	info: 'green',
	warn: 'yellow',
	error: 'red'
});


module.exports = (function() {
	// ### Private Variables

	// Holds all our functions and variables that
	// should be exported
	var logger = {};
	
	// Holds our configuration options, however
	// you can use load to edit them.
	var configuration = {
		// This controls if we should print debug
		// messages or not. However this is below
		// verbose option, so if verbose is false
		// this will also be false.
		debug: false,

		// This controls if we should print info
		// and debug messages. 
		verbose: true,

		// This controls if we should send log
		// messages at all.
		log: true
	}

	// ### Public Functions

	// Loads new configuration settings from given
	// object. 
	logger.load = function(config) {
		for (var key in config) {
			configuration[key] = config[key];
		}
	}

	// Sends debug message to the screen
	// [*] Message
	logger.debug = function(msg) {
		if (configuration.debug && configuration.verbose && configuration.log) {
			console.log(("[*] " + msg).debug);
		}
	}

	// Sends info message to the screen
	// [+] Message
	logger.info = function(msg) {
		if (configuration.verbose && configuration.log) {
			console.log(("[+] " + msg).info);
		}
	}

	// Sends warning to screen
	// [+] Warning
	logger.warn = function(msg) {
		if (configuration.log) {
			console.log(("[+] " + msg).warn);
		}
	}

	// Sends error message to screen
	// [-] Error
	logger.error = function(msg) {
		if (configuration.log) {
			console.log(("[-] " + msg).error);
		}
	}

	// Export all methods and functions inside
	// logger.
	return logger;
})();
